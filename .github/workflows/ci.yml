name: Build
on:
  push:
    tags: ["v*"]
    branches: ["main"]
  pull_request:
    branches: ["*"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    env:
      LLVM_BIN: /usr/lib/llvm-13/bin
      SBTN: "sbt --client"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' 
          java-version: '17'
          cache: sbt

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/sbt-vcpkg/vcpkg
            ~/.cache/sbt-vcpkg/vcpkg
            ~/.cache/sbt-vcpkg/vcpkg-install
          key: ${{ runner.os }}-sbt-vcpkg-new
          
      - uses: rui314/setup-mold@v1

      - name: Install Nginx Unit
        run: 
          sudo curl --output /usr/share/keyrings/nginx-keyring.gpg \
            https://unit.nginx.org/keys/nginx-keyring.gpg
          sudo echo "deb [signed-by=/usr/share/keyrings/nginx-keyring.gpg] https://packages.nginx.org/unit/ubuntu/ focal unit" >> /etc/apt/sources.list.d/unit.list
          sudo echo "deb-src [signed-by=/usr/share/keyrings/nginx-keyring.gpg] https://packages.nginx.org/unit/ubuntu/ focal unit" >> /etc/apt/sources.list.d/unit.list

          sudo apt update
          sudo apt install unit unit-dev
          sudo systemctl restart unit

      - name: Setup for Scala Native
        run: sudo ./scripts/setup-debian.sh

      - name: Run tests 
        run: $SBTN 'app/nativeLink; test'

  docker_build:
    name: Docker build
    runs-on: ubuntu-20.04
    if: "!(startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/main'))"
    steps:
      - uses: actions/checkout@v3

      - name: Docker build
        run: docker build . -t twotm8

  mergify_build_summary:
    name: Build summary
    runs-on: ubuntu-latest
    needs: [build, docker_build]
    steps:
      - name: I only exist to please Mergify :(
        run: echo "It's a sad existence but necessary"

  deploy:
    name: Deploy
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 
        with:
          fetch-depth: 0

      - uses: superfly/flyctl-actions@master
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        with:
          args: "deploy"
